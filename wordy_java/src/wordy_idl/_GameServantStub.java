package wordy_idl;


/**
* wordy_idl/_GameServantStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from wordy.idl
* Wednesday, May 10, 2023 8:56:36 o'clock PM SGT
*/


// Interface for a Game object when a player joins a game
public class _GameServantStub extends org.omg.CORBA.portable.ObjectImpl implements wordy_idl.GameServant
{

  public void submitWord (int userId, String word) throws wordy_idl.InvalidWordException, wordy_idl.WordLengthException, wordy_idl.WrongLetterException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("submitWord", true);
                $out.write_long (userId);
                $out.write_string (word);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:wordy_idl/InvalidWordException:1.0"))
                    throw wordy_idl.InvalidWordExceptionHelper.read ($in);
                else if (_id.equals ("IDL:wordy_idl/WordLengthException:1.0"))
                    throw wordy_idl.WordLengthExceptionHelper.read ($in);
                else if (_id.equals ("IDL:wordy_idl/WrongLetterException:1.0"))
                    throw wordy_idl.WrongLetterExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                submitWord (userId, word        );
            } finally {
                _releaseReply ($in);
            }
  } // submitWord

  public int checkPlayerCount ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("checkPlayerCount", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return checkPlayerCount (        );
            } finally {
                _releaseReply ($in);
            }
  } // checkPlayerCount

  public String generateRandomLetters ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("generateRandomLetters", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return generateRandomLetters (        );
            } finally {
                _releaseReply ($in);
            }
  } // generateRandomLetters

  public boolean checkWord (String word, String randomLetters) throws wordy_idl.InvalidWordException, wordy_idl.WordLengthException, wordy_idl.WrongLetterException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("checkWord", true);
                $out.write_string (word);
                $out.write_string (randomLetters);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:wordy_idl/InvalidWordException:1.0"))
                    throw wordy_idl.InvalidWordExceptionHelper.read ($in);
                else if (_id.equals ("IDL:wordy_idl/WordLengthException:1.0"))
                    throw wordy_idl.WordLengthExceptionHelper.read ($in);
                else if (_id.equals ("IDL:wordy_idl/WrongLetterException:1.0"))
                    throw wordy_idl.WrongLetterExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return checkWord (word, randomLetters        );
            } finally {
                _releaseReply ($in);
            }
  } // checkWord

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:wordy_idl/GameServant:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _GameServantStub
